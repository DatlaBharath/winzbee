# This "input" configures a global authorization rule to enable public access to
# all models in this schema. Learn more about authorization rules here: https://docs.amplify.aws/cli/graphql/authorization-rules
input AMPLIFY { globalAuthRule: AuthRule = { allow: public } } # FOR TESTING ONLY!

type User {
  id: ID!
  name: String!
  email: String!
  location: Location!
  skills: [Skill!]!
  events: [Event!]!
  recommendedEvents: [Event!]!
  posts: [Post!]!
  connections: [User!]!
}

type Skill {
  id: ID!
  name: String!
}

type Event {
  id: ID!
  name: String!
  description: String!
  location: Location!
  attendees: [User!]!
  startTime: String!
  endTime: String!
}

type Post {
  id: ID!
  content: String!
  author: User!
  createdAt: String!
}

type Location {
  latitude: Float!
  longitude: Float!
}

type Query {
  getUser(id: ID!): User
  getAllUsers: [User!]!
  getSkill(id: ID!): Skill
  getAllSkills: [Skill!]!
  getEvent(id: ID!): Event
  getAllEvents: [Event!]!
  getPost(id: ID!): Post
  getAllPosts: [Post!]!
}

type Mutation {
  createUser(name: String!, email: String!): User
  addSkillToUser(userId: ID!, skillId: ID!): User
  setMindsetToUser(userId: ID!, mindsetId: ID!): User
  createEvent(
    name: String!
    description: String!
    startTime: String!
    endTime: String!
  ): Event
  addAttendeeToEvent(eventId: ID!, userId: ID!): Event
  createPost(content: String!): Post
  deletePost(postId: ID!): Boolean
  sendConnectionRequest(userId: ID!): Boolean
  acceptConnectionRequest(userId: ID!): Boolean
}